@layer components {
  .prose {
    /* A border is used to prevent sub-pixel rendering issues seen when just using a 1px line. */
    a {
      display: inline-block;
      position: relative;
      white-space: nowrap;
      text-decoration-line: none;
      color: var(--color-primary);

      &::after {
        content: "";
        position: absolute;
        left: 0;
        right: 0;
        bottom: 2px;
        height: 1px;
        border-bottom: 1px solid currentColor;
        width: 0;
        opacity: 0;
        transition: width 300ms ease-in-out, opacity 100ms linear;
      }

      &[data-wh-icon-added="true"]::after {
        left: 21px;
      }

      &:hover::after {
        width: 100%;
        opacity: 1;
      }

      &[data-wh-icon-added="true"]:hover::after {
        width: calc(100% - 21px);
      }
    }

    h1 {
      color: #fff;
      font-weight: 800;
      font-size: 2.25em;
      margin-top: 0;
      margin-bottom: 0.8888889em;
      line-height: 1.1111111;
    }

    h2 {
      color: #ddd;
      font-weight: 700;
      font-size: 1.5em;
      margin-top: 2em;
      margin-bottom: 1em;
      line-height: 1.3333333;
    }

    h3 {
      color: inherit;
      font-weight: 600;
      font-size: 1.25em;
      margin-top: 1.6em;
      margin-bottom: 0.6em;
      line-height: 1.6;
      opacity: 0.7;
    }

    h4 {
      color: inherit;
      font-weight: 600;
      margin-top: 1.5em;
      margin-bottom: 0.5em;
      line-height: 1.5;
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      scroll-margin: calc(var(--spacing) * 10);

      .header-anchor {
        float: left;
        margin-left: -1.2em;
        padding-right: 0.5em;
        /* font-size: .85rem; */
        opacity: 0;
        text-decoration: none;
        transition: opacity 0.2s ease;

        &:hover {
          text-decoration-color: currentColor;
        }
      }

      &:hover {
        .header-anchor {
          opacity: 0.5;
        }
      }
    }

    figure {
      margin-top: calc(var(--spacing) * 6);

      & > * {
        margin-block: 0;
      }

      figcaption {
        color: var(--color-muted-foreground);
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
        margin-top: calc(var(--spacing) * 2);
      }
    }

    hr {
      color: var(--color-border);
    }

    ol,
    ul {
      margin-block: 1.25em;
      list-style-type: none;

      li {
        margin-top: 0.5em;
        margin-bottom: 0.5em;
      }
    }

    ol > li,
    ul > li {
      position: relative;
      padding-left: 1.75em;
    }

    > ul > li p {
      margin-block: 0.75em;
    }

    > ol > li:first-child {
      margin-top: 1.25em;
    }

    > ol > li:last-child {
      margin-bottom: 1.25em;
    }

    ul ul,
    ul ol,
    ol ul,
    ol ol {
      margin-block: 0.75em;
    }

    ol > li::before {
      content: counter(list-item, var(--list-counter-style, decimal)) ".";
      position: absolute;
      font-weight: 400;
      left: 0;
      color: var(--color-primary);
    }

    ul > li::before {
      content: "";
      position: absolute;
      border-radius: 50%;
      width: 0.375em;
      height: 0.375em;
      top: calc(0.875em - 0.1875em);
      left: 0.25em;
      background-color: var(--color-primary);
    }

    pre > code {
      display: block;
      border-radius: var(--radius-lg);
      padding-inline: calc(var(--spacing) * 6);
      padding-block: calc(var(--spacing) * 2);
      margin-block: calc(var(--spacing) * 4);
      background-color: --alpha(var(--color-border) / 70%);
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
      box-shadow: var(--shadow-lg);
    }

    :not(pre, td) > code {
      font-family: var(--font-mono);
      font-size: var(--text-sm);
      line-height: var(--tw-leading), var(--text-sm--line-height);
      background-color: --alpha(var(--color-border) / 70%);
      border-radius: var(--radius-md);
      padding-block: calc(var(--spacing) * 1);
      padding-inline: calc(var(--spacing) * 2);
    }

    @variant dark {
      .shiki,
      .shiki span {
        color: var(--shiki-dark) !important;
        background-color: var(--shiki-dark-bg) !important;
      }
    }
  }
}
